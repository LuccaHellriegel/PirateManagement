openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/treasures:
    get:
      tags:
      - treasure-controller
      operationId: getTreasures
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Treasure'
    post:
      tags:
      - treasure-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreasurePO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Treasure'
  /api/v1/crews:
    get:
      tags:
      - crew-controller
      operationId: getCrews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Crew'
    post:
      tags:
      - crew-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrewPO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Crew'
  /api/v1/treasures/{id}/assignedCrews:
    patch:
      tags:
      - treasure-controller
      operationId: assignCrew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: crew
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Treasure'
  /api/v1/treasures/{id}:
    get:
      tags:
      - treasure-controller
      operationId: getTreasure
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Treasure'
  /api/v1/treasures/radius:
    get:
      tags:
      - treasure-controller
      operationId: getTreasuresInRadius
      parameters:
      - name: x
        in: query
        required: true
        schema:
          type: number
          format: float
      - name: "y"
        in: query
        required: true
        schema:
          type: number
          format: float
      - name: radius
        in: query
        required: false
        schema:
          type: number
          format: float
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Treasure'
  /api/v1/crews/{id}:
    get:
      tags:
      - crew-controller
      operationId: getCrew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Crew'
  /api/v1/available-treasures:
    get:
      tags:
      - available-treasure-controller
      operationId: getAvailableTreasures
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableTreasure'
  /api/v1/available-treasures/{id}:
    get:
      tags:
      - available-treasure-controller
      operationId: getAvailableTreasure
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AvailableTreasure'
  /api/v1/available-crews:
    get:
      tags:
      - available-crew-controller
      operationId: getAvailableCrews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableCrew'
  /api/v1/available-crews/{id}:
    get:
      tags:
      - available-crew-controller
      operationId: getAvailableCrew
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AvailableCrew'
components:
  schemas:
    Position:
      type: object
      properties:
        x:
          type: number
          format: float
        "y":
          type: number
          format: float
    TreasurePO:
      required:
      - assignedCrews
      - name
      - owner
      - position
      - size
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        position:
          $ref: '#/components/schemas/Position'
        size:
          type: number
        assignedCrews:
          uniqueItems: true
          type: array
          items:
            type: string
    AvailableCrew:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Treasure:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        position:
          $ref: '#/components/schemas/Position'
        size:
          type: number
        assignedCrews:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AvailableCrew'
    CrewPO:
      required:
      - assignedTreasures
      - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        capacity:
          minimum: 0
          type: integer
          format: int32
        assignedTreasures:
          uniqueItems: true
          type: array
          items:
            type: string
    AvailableTreasure:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        size:
          type: number
    Crew:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        capacity:
          type: integer
          format: int32
        assignedTreasures:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AvailableTreasure'
